<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">   

     <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/WEB-INF/classes/jdbc.properties</value>
		</property>
		<property name="fileEncoding" value="utf-8" />
	 </bean>	   
	   
     <!--配置数据源 -->
     <bean id="parentDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
         <property name="driverClassName" value="${jdbc.driverClassName}" />
<!--          <property name="url" value="${jdbc.url}" /> -->
         <property name="username" value="${jdbc.username}" />
         <property name="password" value="${jdbc.password}" />
         <property name="initialSize" value="${jdbc.initialSize}" />
         <property name="maxTotal" value="${jdbc.maxTotal}" />
         <property name="maxIdle" value="${jdbc.maxIdle}" />
         <property name="maxWaitMillis" value="${jdbc.maxWaitMillis}" />
         <property name="minIdle" value="${jdbc.minIdle}" />
         <!-- 设置自动回收超时连接 -->  
          <property name="removeAbandonedOnBorrow" value="${jdbc.removeAbandonedOnBorrow}" />
         <!-- 自动回收超时时间(以秒数为单位) -->  
          <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>         
         <!-- 设置在自动回收超时连接的时候打印连接的超时错误  --> 
          <property name="logAbandoned" value="${jdbc.logAbandoned}"/>
          <property name="validationQuery" value="${jdbc.validationQuery}"/>
     </bean>    
     
     <bean parent="parentDataSource" id="dataSource1">   
		<property name="url" value="${jdbc.url}" /> 
	 </bean> 
	 
     <bean parent="parentDataSource" id="dataSource2">   
		<property name="url" value="${jdbc.url2}" /> 
	 </bean>  	 

	<bean id="dynamicDataSource" class="com.basic.DynamicDataSource" >  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry value-ref="dataSource1" key="DATA_SOURCE_1"></entry>  
                <entry value-ref="dataSource2" key="DATA_SOURCE_2"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSource1"></property> 
    </bean>  
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="dynamicDataSource"></property>
    </bean>
    
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"></property>
    </bean>   
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
 	 	<tx:attributes>
	   		<tx:method name="update*" propagation="REQUIRED"/>
	   	 	<tx:method name="get*" read-only="true"/>			
	     	<tx:method name="find*" read-only="true"/>		
 	     	<tx:method name="*" read-only="true" />
  		</tx:attributes>
	</tx:advice>   
	<aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.test.MyRestController.*(..))" />
        <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>  
</beans>